信息检索
第10章 信息过滤技术
软件学院教研室 陈鄞

本章内容
•
•
•
•
•

10.1 引言
10.2 信息过滤系统的分类体系
10.3 用户兴趣建模
10.4 协作过滤
10.5 信息过滤系统的评价

10.1 引言
• 信息过滤
– 计算机根据用户提供的一个过滤需求(user Profile)，从
动态变化的信息流(比如Web)中自动检索出满足用户个
性化需求的信息
信息过滤是实现“个性化IR”的重要基础

信息过滤与信息检索的关系
信息检索

信息过滤
“user profile”

用户需求

“query”

信息流

静态

动态

需求

动态

静态

需要了解用户的情况

否

是

涉及社会背景

否

是

• 信息过滤的重要意义
– 克服重复查询
– 改变信息获取方式， “信息找人”
– 节省网络资源、提高网络传输效率
– 提高信息安全

提高获取信息的效率

信息过滤的应用
• 克服重复查询
– 网络信息是动态变化的, 用户时常关心这种变化
– 而在搜索引擎中, 用户只能不断地在网络上查询同样的
内容, 以获得变化的信息, 这花费了用户大量的时间

• 提供个性化信息服务
– 对不同的用户采取不同的服务策略, 提供不同的服务内
容。
– 实现“主动服务”，“信息找人”

• 实现有害信息的过滤
– 反动言论，保护国家安全
– 谣言，保护社会稳定
– 色情内容，保护青少年身心健康

• 垃圾信息过滤
– 垃圾邮件
– 垃圾短信

• 信息中介开展网络增值服务
– 建立最初的客户资料库
– 建立标准丰富档案内容
– 利用客户档案获取价值

• 推荐(Recommendation)
– 根据不同用户之间需求的相关性推荐信息

提纲
•
•
•
•
•

10.1 引言
10.2 信息过滤系统的分类体系
10.3 用户兴趣建模
10.4 协作过滤
10.5 信息过滤系统的评价

10.2 信息过滤系统的分类体系
信息
过滤
系统
操作的
主动性

主动
过滤

被动
过滤

操作的
位置

信息源

服务器
端

用户
知识
获取

过滤
方法

用户端

认知
社会
（内容） （协同）

显式

隐式

询问
用户

显式
和隐式

记录用
户行为

文档
空间

推理

(1) 系统主动性
• 主动过滤
– 系统主动收集信息，并将相关信息推荐给用户，是一
种推送机制

• 被动过滤
– 被动地等待信息的到来，对用户收到的信息进行判
断，相关的信息留下，不相关的信息则被过滤
– 比如垃圾邮件过滤、网络新闻组过滤

(2) 过滤策略
• 基于内容的信息过滤
– 用户需求文档的形成及相关度的计算仅依靠信息的内容，发现新
信息的能力差

• 协作过滤（correlative filtering）
– 合作式信息过滤被定义为“通过掌握一个用户群体的诸个体间的相
互联系及组织关系来实现的信息过滤方法。”
– 许多人将合作式信息过滤的方法解释为“相似用户之间相互合作的
过程。”

(3) 用户知识获取方式
•

•

•

显式获取用户信息
– 用户直接填表
– 用关键词表达用户过滤需求
– 用文档集表达用户过滤需求
隐式获取用户信息
– 无需用户直接参与，通过观察用户的动作行为判断用户需求
– 用户阅读文档的时间可以作为衡量该文档相关度的一个指标。
– 其他的一些用户行为——诸如用户是否保存、删除或是打印某篇
文档也可以作为度量文档相关度的一个指标。
显式和隐式并用的方法
– 文档空间（基于案例的方法）
– 推理 (预先定义默认的profile，在扫描过程中再改变)

(4) 过滤操作的位置
•
•
•

信息源过滤
– 将过滤模板提交给信息发布者
服务器过滤
– 用户需求模板放在服务器上
客户端过滤
– 用户的需求模板放在客户端
– 如：Outlook邮件过滤

客户端

服务器端

优点

(1)所有的用户信息都存储在客户端
，不用担心用户的隐私问题。
(2)所有的重排序计算也在客户端，
不对服务器造成压力。
（3）客户端可以搜集更多的用户信
息

(2）拥有所有用户的个性化信息，因此可
以有全局的统计信息，就有可能根据全局
或是其他用户的信息来改进排序
(1）无需安装客户端，整个个性化的过程
对用户是透明的。

缺点

(1)缺乏全局的内容
(2)用户往往懒于安装客户端。

(1）用户会担心自己的隐私安全。
(2）给服务器端带来了很大的计算压力。
(3）只能搜集用户在页面上的行为来挖掘
用户的兴趣，更多其他的用户行为无法探
测。

提纲
•
•
•
•
•

10.1 引言
10.2 信息过滤系统的分类体系
10.3 用户兴趣建模
10.4 协作过滤
10.5 信息过滤系统的评价

10.3 用户兴趣建模
10.3.1用户档案的建立
•

用户需求的表达方式
– 关键词集合
• 存在的问题
– 歧义性，关系的表达
• 解决办法
– 布尔表达式
– 关键词权重
– 关键短语
– 文档集合
• 优点
– 避免用户选择关键词的困难
• 缺点
– 覆盖性问题

10.3.2 用户档案的更新
• 用户兴趣的变化方式
– 渐进式
• 用户兴趣随着时间的递推逐渐发生改变，是一个缓慢持续的过
程

– 突发式
• 用户兴趣随着某个事件的发生而突然发生变化

• 常见的模型更新方法
– ① 用户query流分析法
– ② 基于相关反馈的方法
– ③ 用户文档高级交互（显式）

① 用户query流分析法
• 对用户的query流进行分析，将描述同一检索对象
的query划分为同一段落，从而发现用户检索需求
的变化
query:
高性价比
的相机

隐式信息

理光R系
列评价

理光R6
相机报价

GB2312
编码

西藏旅游
线路

西藏自助
游

• 用户兴趣跟踪

西藏旅游
线路

西藏自助
游

GB2312
编码

……

旅游兴趣

坐火车去
西藏

• 相似用户群的建立
任务1

任务2

当前用户:

理光R相
机评价

理光R6
报价

GB2312
编码

西藏旅
游线路

西藏自
助游

用户2:

四川旅
游经典

成都景
点

九寨沟
门票

恶灵骑
士

当前兴趣
领域中的
相似用户

用户3:

佳能相
机

坐火车
去西藏

布达拉
宫

日喀则

龙井茶

语料库
当前用户:

西藏景
点

理光R6
报价

……

西藏旅
游线路

西藏自
助游

个性化检
索结果

相似用户
其它用户:

佳能相
机

坐火车
去西藏

布达拉
宫

日喀则

龙井茶

② 基于相关反馈的方法
• 基本思想
– 从相关反馈中自动提取文档特征用于更新用户模型
– 可以从相关文档中提取正面特征，用以补充用户模型
中相应特征的权重，从而提高系统查全率
– 可以从不相关文档中提取反面特征，用以削弱用户模
型中相应特征的权重，从而提高系统准确率

• Rocchio算法
1
Qk +1 = αQk + β (
| Rk |

1
) −γ (
∑
d
i
| Nk |
d i ∈Rk

∑d )

d i ∈N k

i

Rk → 第k次检索返回的文档中，用户标明为相关文档的集合
N k → 第k次检索返回的文档中，用户标明为不相关文档的集合

α、β、γ → 用来调节各部分权重的参数

③ 用户文档高级交互
• 用户直接参与，在兴趣发生变化时或者变化前对用户文档
进行及时更新

• 用户显式信息
– 基本情况
– 长期兴趣
– 电子邮箱

注册

记录用户
显式信息

User Profile

基本情况

显式信息

电子邮箱
长期兴趣

用户

系统给定的当前检索对象

quer
y
query
• 用户检索隐式信息

–
–
–
–
–

记录用户

记录网页编号、Sinppet、
注册 显式信息
用户点击及查看时间
检索结果 User Profile
记录用户
网页编号

页面点击情况
浏览时间
翻页信息
检索对象集
保存、删除、打印等操作
用户query

隐式信息

查看网页及
浏览时间

– 检索结果
用户输入对当前对象检索
答案的描述

查询

记录翻页信息
翻页信息

注册
查询
检索对象集

记录用户
显式信息
记录用户
隐式信息

User Profile

标注
提交

标准答案集

提纲
•
•
•
•
•

10.1 引言
10.2 信息过滤系统的分类体系
10.3 用户兴趣建模
10.4 协作过滤
10.5 信息过滤系统的评价

10.4 协作过滤
• 相关概念
– 协作信息过滤中，当前获得推荐结果的用户通常称为活动用户（
Active user）
– 参与过滤的信息资源统称为项目（Item）
– U={ u1,…,um }→所有参与协作过滤的用户集
– I ={ t1,…,tn } →项目集
– R={ rik } →用户对项目的评价集
如何根据用户行为（评
分）预测活动用户ua
对目标项目ti的评分?

主要实现方法
• 基于用户的协作过滤
• 基于项目的协作过滤

10.4.1基于用户的协作过滤
• 基本思想
– 通过遍历整个用户群建立用户之间的相似关系，并推
荐项目
根据用户评分计算所有用户与活动用户的相似度
选择近邻
通过近邻对项目评分的加权来预测活动用户对项目的评分

• 常用的用户间相似度评价方法
– 余弦相似度计算法
– 相关相似性计算法

① 余弦相似度计算法
• 将用户ua对项目的评分映射为n维评价矢量

sim(u a , u b ) = cos(u a , u b ) =

u a ⋅ ub
u a × ub

② 相关相似性计算法
85分

85分

b

a
A组

B组
平均分90

平均分80

C sim (u a , u b ) =

∑

n
i =1

( R(u a , t i ) − R(u a ))( R(u b , t i ) − R(u b ))

∑i =1 ( R(u a , t i ) − R(u a ))
n

2

2
(
R
(
u
,
t
)
−
R
(
u
)
)
∑i =1 b i
b
n

R (uk , ti ) → uk 对ti的评分
R (uk ) → uk 对所有项目的平均评分

• 近邻用户数量的设置
– 阈值设置：系统选择相关性大于阈值的用户作为活动
用户的近邻
– 定值设置：预先确定近邻集 的规模

• 活动用户对目标项目的评分
n

P(u a , ti ) = R(ua ) + λ ∑ w(ua , uk )( R(uk , ti ) − R(uk ))
k =1

R(ua ) → ua 先验的平均评分
w(ua , uk ) → ua与邻居uk的相似度
R(uk , ti ) → uk 对ti的评分
R(uk ) → uk 对所有项目的平均评分

λ → 规范化系数

基于用户的协作过滤优缺点
• 优点
– 提高了协作过滤系统推荐项目的准确性

• 缺点
– 过分相似的用户共有的项目集规模相对很大，削弱了
用户间可以互相推荐的未知项目空间

基于反流行度的加权
• 反流行度
n(ti )
InvPop(i ) = 1 −
m
n(ti ) → 对项目ti 评价过的用户数, 即项目ti的流行度
m → 归一化因子

– 一个项目的流行程度越小，则其反流行度 越大
– 目的在于最近邻居可以向活动用户推荐更多新颖的项目

• 基于用户的协作过滤系统在实验环境下可以获得较高的性
能，但在实际应用中的效果却普遍偏低
• 主要原因
– 在于评分机制的稀疏性，协作过滤系统性能在很大程度上依赖于
用户的反馈
– 实际应用中的用户很少主动提供项目的评价，从而造成“用户”与“
评分”对应的二元关系相对稀疏，导致协作过滤系统无法有效识别
相似用户

10.4.2 基于项目的协作过滤
• 基本思想
– 针对目标项目和活动用户已有项目之间进行协作性检
测，根据活动用户对已有相近项目的评分来预测活动
用户对目标项目的评分
– 核心问题：检测两个项目之间的协作相似性
– 区别于基于内容的过滤，描述项目的特征空间不是由
项目本身包含的词、短语或句子构成，而是用户群对
其进行的综合评分

• 用户群对项目综合评分

t i = [ scori ,1 , scori , 2 , L, scori ,k , L scori ,n ]
User1

User2

User3

User4

Item1

？

3

3

1

Item2

2

？

4

2

Item3

3

2

1

4

Item4

4

2

？

3

项目之间的相关性仍然可以采纳余弦
相似度和相关相似度等算法进行度量

• 用户u 对目标项目ti评分的估计方法

Pu ,i

∑
=

(
⋅
)
S
R
i
,
k
u
,
k
k ∈ all similar items

∑

k ∈ all similar items

Pu,i →用户u对目标项目ti的评分估计
Si,k →项目tk与目标项目ti的协作相似性
Ru,k→用户u对项目tk的评分

Si , k

• 由于在大多数协作过滤系统中项目的更新比较慢，因此可
以预先计算项目之间的相似性，从而提高推荐系统的效率
• 一种方法是计算所有项目之间的相似性并进行索引，这种
方法的缺陷在于系统需要 的存储空间
• 一种方法是对每个项目 ，只保存最相似的 j个项目及其协
作相关性， j 称为模型尺寸
• 模型尺寸的选择对于过滤系统的性能有较大影响
– 过大，则系统的预测能力很强，但空间复杂度增大
– 过小，则一些于目标项目相似的项目可能没有被考虑其中，从而
降低过滤系统的预测性能

• 基于内容的信息过滤策略重点在于分析信息内在的本质规
律，通过自然语言处理技术对知识的表示进行深层理解，
从而提高信息服务的精确性；
• 基于协作的信息过滤策略重点在于挖掘用户的社会关系网
络，探寻知识背景和信息需求相似的用户，并在此基础上
实施信息多元化的交互，从而实现信息服务的拓展性和新
颖性
• 目前信息过滤领域的另一研究热点是内容与协作策略的融
合，使信息过滤系统既能延续用户指定的信息查询路线精
准地获取知识，又能挖掘相关于用户的其它兴趣偏好拓展
知识获取的领域。

提纲
•
•
•
•
•

10.1 引言
10.2 信息过滤系统的分类体系
10.3 用户兴趣建模
10.4 基于协作的信息过滤
10.5 信息过滤系统的评价

10.5 信息过滤系统的评价
10.5.1 TREC中的信息过滤评价策略
• （1）Utility
相关

不相关

检出

R+/A

N+/B

未检出

R-/C

N-/D

Utility=(A×R+) + (B×N+) + (C×R-) + (D×N-)
– R+，R- ， N+ ， N-→每个主题四种文本的数量
– A,B,C,D →每种情况的代价
• A,D>=0, B,C<=0
• 由于检出相关信息最重要，所以A >= D

– Utility值越大，系统的过滤性能就越好

10.5 信息过滤系统的评价
10.5.1 TREC中的信息过滤评价策略
• （1）Utility
相关

不相关

检出

R+/A

N+/B

未检出

R-/C

N-/D

Utility=(A×R+) + (B×N+) + (C×R-) + (D×N-)
– R+，R- ， N+ ， N-→每个主题四种文本的数量
– A,B,C,D →每种情况的代价
• A、D>=0；B、C<=0
• 由于检出相关信息最重要，所以A >= D

– Utility值越大，系统的过滤性能就越好

• Trec9中， Utility的公式为
⎧ 2 * R − N , (2 * R − N ) > MinU
TU 9 = ⎨
, 其他
⎩MinU
+

+

+

– 即A=2,B=-1,C=0,D=0
– MinU是一个固定的下限
n

ST 9U =

相关

不相关

检出

R+/A

N+/B

未检出

R-/C

N-/D

+

∑ T 9U
i =1

n

i

• （2）准确率
R+
T 9P =
max(MinD, R + + N + )
– 这个指标强调过滤的准确性，但要求检出的文本数不
少于下限MinD

10.5.2 通用的评价策略

•

•

•

•

相关

不相关

检出

R+/A

N+/B

未检出

R-/C

N-/D

召回率（Recall）
R+
recall = +
R + R−
准确率（Precision）

•

R+
precision = +
R + N+

•

精确率（Accuracy）
R+ + N −
accuracy = +
R + R− + N + + N −
错误率（Error）
R− + N +
error = +
= 1 − accuracy
R + R− + N + + N −

F-meature

( β 2 + 1)( precision * recall )
F=
β 2 * precision + recall
虚报率（Fallout）
N+
fallout = +
N + N−

•

漏报率（Miss rate）

R−
missrate = +
= 1 − recall
−
R +R

10.5.3 面向用户的评价策略
相关文献|R|

用户已知的相关
文献|U|

•

结果集|A|

检出的用户以前未
知的相关文献|Ru|

检出的用户已知的相
关文献|Rk|

覆盖率
– 在用户已知的相关文档集合中，
被检出的文档所占的比例

Rk
cov erage =
U

•

新颖率
– 在检出的文档集合中，用户以
前未知的相关文档所占的比例

Ru
novelty =
Ru + Rk

本章小结
•
•
•
•

引言
信息过滤系统的分类体系
用户兴趣建模
协作过滤
– 基于用户的协作过滤
– 基于项目的协作过滤

• 信息过滤系统的评价
– TREC中的信息过滤评价策略
– 通用的评价策略
– 面向用户的评价策略

结束

